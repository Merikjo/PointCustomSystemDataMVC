@model IEnumerable<PointCustomSystemDataMVC.ViewModels.CustomerViewModel>

@{
    ViewBag.Title = "Index";
}
<title>PointCollege Ajanvarausohjelmisto</title>
<link rel="stylesheet" href="http://www.w3schools.com/lib/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/lib/w3.css">
<script src="/lib/w3.js"></script>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<script src="~/Scripts/modernizr-2.8.3.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="/Scripts/bootstrap.js"></script>
<script src="/Scripts/respond.js"></script>

    <!-- !SIDEMENU CONTENT! -->
@{ Html.RenderAction("SideMenu", "Customers");}

   <!-- !PAGE CONTENT! -->
<div class="w3-main" style="margin-left:250px">

    <!-- Push down content on small screens -->
<div class="w3-hide-large" style="margin-top:83px"></div>

    <!-- Container -->
 <div class="w3-container">

        <h2>Asiakas</h2>
        <br />
        <p>Asiakkaita yhteensä: @Model.Count()</p>

        <p><a href="/Customers/Create" class="w3-btn w3-large">Uusi asiakas</a></p>
        
        <div><a href="@Url.Action("DownLoadCustomerPDF", "Customers", new { @class = "w3-btn w3-small w3-grey" })">Asiakasraportti</a></div>

        <input type="button" onclick="location.href = '/Customers/DownLoadCustomerPDF';" value="Asiakasraportti" />

        <div><i class="fa fa-search"></i><input class="w3-input w3-border w3-padding" type="text" placeholder="Etsi asiakastieto..." id="myInput" onkeyup="searchByCustomer()"></div>

        <table class="table" id="myTable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UserIdentity)
                    </th>
                    @*<th>
                        @Html.ActionLink("FirstNameA", "Index", new { sortOrder = ViewBag.FirstnameSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("LastNameA", "Index", new { sortOrder = ViewBag.LastnameSortParm })
                    </th>*@
                    <th onclick="sortTable(1)">
                        @Html.DisplayNameFor(model => model.FirstNameA)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastNameA)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Identity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PhoneNum_1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostalCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostOffice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Notes)
                    </th>
                    <th onclick="sortTable(0)"><select id='filterText' style='display:inline-block' onchange='filterText()'>
                    <option disabled selected>Valitse</option>
                    <option value='True'>Cheked</option>
                    <option value='False'>False</option>
                    <option value='Kaikki'>Kaikki</option>
                    </select>
                       
                        @Html.DisplayNameFor(model => model.Active)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Permission)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserIdentity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstNameA)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastNameA)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Identity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNum_1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PostalCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PostOffice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>
                        <td>
                            @{
                                string True = "";
                                if (item.Active.HasValue && (item.Active.Value == true))
                                {
                                    True = "checked";
                                }
                            }
                            <input name="Active" type="checkbox" @True />
                            @*@Html.DisplayFor(modelItem => item.Active)*@                        
                        </td>

                        <td>
                            @{
                                string PermissionOk = "";
                                if (item.Permission.HasValue && (item.Permission.Value == true))
                                {
                                    PermissionOk = "checked";
                                }
                            }
                            <input name="Active" type="checkbox" @PermissionOk />
                            @*@Html.DisplayFor(modelItem => item.Permission)*@
                        </td>

                        <td>
                            @Html.ActionLink("Muokkaa", "Edit", new { id = item.Customer_id }) |
                            @Html.ActionLink("Tiedot", "Details", new { id = item.Customer_id }) |
                            @Html.ActionLink("Poista", "Delete", new { id = item.Customer_id }) |
                            @Html.ActionLink(item.FirstNameA + " " + item.LastNameA, "TreatText", "Reservations", new { Reservation_id = item.Reservation_id }, new { @class = "w3-btn btn-success w3-grey w3-small" })
                            <br><br>
                            @Html.ActionLink("Palveluvaraus", "Create", "Reservations", new { Customer_id = item.Customer_id }, new { @class = "w3-btn btn-success w3-grey w3-small" })
                            <br><br>                      
                            @Html.ActionLink("Lupatieto", "CustomerPermission", new { id = item.Customer_id }, new { @class = "w3-btn btn-success w3-grey w3-small" })
                            <br><br>
                            @Html.ActionLink("Arkistointi", "Archive", new { id = item.Customer_id }, new { @class = "w3-btn btn-success w3-grey w3-small" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div><!-- End content -->
</div><!-- End page content -->

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <script>
        //TIETOJEN ETSINTÄ
        //Etsintä ominaisuuden scripti, luku[0] viittaa ensimmäiseen sarakkeeseen.
        //Vaihda lukua, jos etsintä kohdennetaan johonkin toiseen sarakkeeseen
        function searchByCustomer() {
                                var input, filter, table, tr, td, i;
                                input = document.getElementById("myInput");
                                filter = input.value.toUpperCase();
                                table = document.getElementById("myTable");
                                tr = table.getElementsByTagName("tr");
                                for (i = 0; i < tr.length; i++) {
                                    td
                                        = tr[i].getElementsByTagName("td")[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
                                    if (td) {
                                        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                                            tr[i].style.display = "";
                                        } else {
                                            tr[i].style.display = "none";
                                        }
                                    }
                                }
                            }

                            //NÄKYMÄN SUODATUS (FILTER)
                            function sortTable(n) {
                                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                                table = document.getElementById("myTable");
                                switching = true;
                                //Set the sorting direction to ascending:
                                dir = "asc";
                                /*Make a loop that will continue until
                                no switching has been done:*/
                                while (switching) {
                                    //start by saying: no switching is done:
                                    switching = false;
                                    rows = table.getElementsByTagName("TR");
                                    /*Loop through all table rows (except the
                                    first, which contains table headers):*/
                                    for (i = 1; i < (rows.length - 1) ; i++) {
                                        //start by saying there should be no switching:
                                        shouldSwitch = false;
                                        /*Get the two elements you want to compare,
                                        one from current row and one from the next:*/
                                        x = rows[i].getElementsByTagName("TD")[n];
                                        y = rows[i + 1].getElementsByTagName("TD")[n];
                                        /*check if the two rows should switch place,
                                        based on the direction, asc or desc:*/
                                        if (dir == "asc") {
                                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                                //if so, mark as a switch and break the loop:
                                                shouldSwitch = true;
                                                break;
                                            }
                                        } else if (dir == "desc") {
                                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                                //if so, mark as a switch and break the loop:
                                                shouldSwitch = true;
                                                break;
                                            }
                                        }
                                    }
                                    if (shouldSwitch) {
                                        /*If a switch has been marked, make the switch
                                        and mark that a switch has been done:*/
                                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                                        switching = true;
                                        //Each time a switch is done, increase this count by 1:
                                        switchcount++;
                                    } else {
                                        /*If no switching has been done AND the direction is "asc",
                                        set the direction to "desc" and run the while loop again.*/
                                        if (switchcount == 0 && dir == "asc") {
                                            dir = "desc";
                                            switching = true;
                                        }
                                    }
                                }
                            }

                            // Create a "close" button and append it to each list item
                            var myNodelist = document.getElementsByTagName("TR");
                            var i;
                            for (i = 0; i < myNodelist.length; i++) {
                                var span = document.createElement("SPAN");
                                var txt = document.createTextNode("\u00D7");
                                span.className = "close";
                                span.appendChild(txt);
                                myNodelist[i].appendChild(span);
                            }

                            // Click on a close button to hide the current list item
                            var close = document.getElementsByClassName("close");
                            var i;
                            for (i = 0; i < close.length; i++) {
                                close[i].onclick = function () {
                                    var div = this.parentElement;
                                    div.style.display = "none";
                                }
                            }

                            // Asiakasnäkymän suodatus Aktiivisuuden mukaan:
                            function filterText() {
                                var rex = new RegExp($('#filterText').val());
                                if (rex == "/Kaikki/") { clearFilter() } else {
                                $('.content').hide();
                                $('.content').filter(function () {
                                        return rex.test($(this).text());
                                    }).show();
                                }
                            }

                            function clearFilter() {
                                $('.filterText').val('');
                                $('.content').show();
                            }

    </script>

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
        @*document.getElementById("myBtn").click();*@
        @*document.getElementById("myAccFunc").click();*@
    }
