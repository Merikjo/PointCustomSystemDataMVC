@model IEnumerable<PointCustomSystemDataMVC.ViewModels.ReservationViewModel>

@{
    ViewBag.Title = "Index";
}

@*@{
    ViewBag.Title = "ASP.NET MVC 5 Event Calendar";
}*@
<title>PointCollege Ajanvarausohjelmisto</title>

<link rel="stylesheet" href="https://www.w3schools.com/lib/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


<script src="~/Scripts/daypilot-all.min.js"></script>
<script src="~/Scripts/DayPilot/daypilot-calendar.src.js"></script>
<script src="~/Scripts/DayPilot/daypilot-all.min.js"></script>


<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/modernizr-2.8.3.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="/Scripts/bootstrap.js"></script>
<script src="/Scripts/respond.js"></script>

<script src="@Url.Content("~/Scripts/DayPilot/daypilot-all.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Themes/calendar_white.css")" rel="stylesheet" type="text/css" />


@using DayPilot.Web.Mvc;
@using DayPilot.Web.Mvc.Events.Calendar;
@using DayPilot.Web.Mvc.Enums.Calendar;


<script type="text/javascript">
    // SCRIPT MODAL KALENTERINÄKYMÄ:
            function create(start, end) {
            var m = new DayPilot.Modal();
            m.closed = function () {
                if (this.result == "OK") {
                        db.commandCallBack('refresh');
                    }
                    db.clearSelection();
                };
                m.showUrl('@Url.Action("Create", "Reservations")?start=' + start + '&end=' + end);
            }

             //event creating
             var e = new DayPilot.Event({
                 date: new DayPilot.Date("2017-03-21"),
                 start: new DayPilot.Start("HH\:MM"),
                 end: new DayPilot.End("HH\:MM"),

                 id: DayPilot.guid(),
                 text: "EKA"
             });

             dp.events.add(e);
             alert("Created");

             var e = new DayPilot.Event({
                 date: new DayPilot.Date("2017-03-21"),
                 start: new DayPilot.Date("HH\:MM"),
                 end: new DayPilot.Date("HH\:MM"),
                 id: DayPilot.guid(),
                 text: "TOKA"
             });

            function editEvent(id) {
            var modal = new DayPilot.Modal();
            modal.top = 60;
            modal.width = 400;
            modal.opacity = 70;
            modal.border = "10px solid #d0d0d0";
            modal.closed = function () {
                if (this.result == "OK") {
                    db.commandCallBack('refresh');
                }
                db.clearSelection();
            };
            modal.height = 500;
            modal.zIndex = 100;
            modal.showUrl("/Reservations/Edit/" + id);
            //modal.showUrl("Varaus/Asiakaslomake/" + id);
            //modal.showUrl("http://localhost:17794/Varaus/Edit/37");
            //modal.showUrl("http://localhost:17794/Varaus/Edit/" + id);
            }

            // event creating MODAL
            dp.onTimeRangeSelected = function (args) {
                create();
                dp.update();
            };

            var modal = new DayPilot.Modal({
                onClosed: function (args) {
                    console.log("Modal dialog closed");
                },
                // ...
            });


      // SCRIPT KALENTERINÄKYMÄ:
            var nav = new DayPilot.Navigator("nav");
            //editoitu
            nav.locale = "fi-fi";
            nav.showMonths = 1;
            nav.selectMode = "week";
            nav.onTimeRangeSelected = function (args) {
                dp.startDate = args.start;

                dp.update();

                //JSON kysely
                LoadEvents(dp.visibleStart(), dp.visibleEnd());
            };
            nav.init();

            //muokattu 24.2.2017
            var dp = new DayPilot.Calendar("dpc");
            //editoitu
            dp.locale = "fi-fi";
            dp.allowEventOverlap = false;
            dp.viewType = "Week";
            dp.init();

          

            //// event creating
            //dp.onTimeRangeSelected = function (args) {
            //    var name = prompt("New event name:", "Event");
            //    dp.clearSelection();
            //    if (!name) return;
            //    var e = new DayPilot.Event({
            //        start: args.start,
    //        end: args.end,

            //        id: DayPilot.guid(),
            //        resource: args.resource,
            //        text: name
            //    });
            //    dp.events.add(e);
            //    alert("Created");
            //};

            //modal.showUrl("Edit.aspx");

            //var modal = new DayPilot.Modal({
            //    onClosed: function (args) {
            //        console.log("Modal dialog closed");
            //    },
            //    // ...
            //});
            //modal.showHtml("<h1>Hello</h1>");


            dp.onEventClicked = function (args) {
                //formatted = $.datepicker.formatDate("M d, yy", new Date("2014-07-08T09:02:21.377"));
                var startDate = new Date(args.e.start());
                var endDate = new Date(args.e.end());

                var hour = "" + startDate.getHours(); if (hour.length == 1) { hour = "0" + hour; }
                var minute = "" + startDate.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
                //var sD = (startDate.getMonth() + 1) + '.' + startDate.getDate() + '.' + startDate.getFullYear() + " " + hour + ":" + minute;
                var sD = startDate.getDate() + '.' + (startDate.getMonth() + 1) + '.' + startDate.getFullYear() + " " + hour + ":" + minute;

                var hour = "" + endDate.getHours(); if (hour.length == 1) { hour = "0" + hour; }
                var minute = "" + endDate.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
                //var eD = (endDate.getMonth() + 1) + '.' + endDate.getDate() + '.' + endDate.getFullYear() + " " + hour + ":" + minute;
                var eD = endDate.getDate() + '.' + (endDate.getMonth() + 1) + '.' + endDate.getFullYear() + " " + hour + ":" + minute;

                editEvent(args.e.data.ID);

                //alert("Event clicked: Alku: " + sD + " Loppu: " + eD);

                //alert( dp.visibleStart().toString() + " - " + dp.visibleEnd().toString() );
            };

            // event resizing, lisätty 25.3.2017
            dp.onEventResized = function (args) {
                //alert("Resized: " + args.e.text());
                UpdateEvent(args);
            };

            // event moving, lisätty 25.3.2017
            dp.onEventMoved = function (args) {
                UpdateEvent(args);
            };

            //Lisätty 25.2.2017: convert date "2010-01-01T00:00:00" to "2010-01-01"
            function ConvertDate2(date) {
                var month = date.getMonth() + 1;
                if (month < 10) { month = "0" + month };
                var day = date.getDay();
                if (day < 10) { day = "0" + day };
                var year = date.getYear();
                if (year < 10) { year = "0" + year };
                var date = year + "-" + month + "-" + day;
                return date;
            }

            //Lisätty 25.3.2017
            function ConfirmMove(ID) {
                alert("Vahvista siirto: " + ID);
            }

            //Lisätty 25.3.2017
            function AddZero(t) {
                if (t < 10) { t = "0" + t };
                return t;
            }

            //Lisätty 25.3.2017
            function UpdateEvent(args) {
                a = new Date(args.e.Start());
                l = new Date(args.e.End());

                var startTime = AddZero(a.getHours()) + ":" + AddZero(a.getMinutes());
                var endTime = AddZero(l.getHours()) + ":" + AddZero(l.getMinutes());

                d = a.getFullYear() + "-" + AddZero(a.getMonth() + 1) + "-" + AddZero(a.getDate());

                url = "/Reservations/Resize/?id=" + args.e.data.ID + "&Date=" + d + "&newStart=" + startTime + "&newEnd=" + endTime;

                $.ajax({ url: url, cache: false }).done(function (data) {
                    //alert(data);
                });
            }

            //Lisätty 22.2.2017
            function LoadEvents(Start, End) {
                url = "/Reservations/Backend/?start=" + start + "&end=" + end;
                //Home/GetVaraukset/?alku="2016-05-20T09:02"&loppu="2016-05-29T09:02";
                //alert("AJAX url: " + url);
                $.ajax({ url: url, cache: false }).done(function (data) {
                    i = 0;
                    //alert("JSON objects: " + data);
                    for (var i = 0; i < data.length; i++) {
                        data[i].Date = ConvertDate(data[i].Date);
                        data[i].Start = data[i].Start;
                        data[i].End = data[i].End;
                        data[i].start = data[i].Date.substr(0, 11) + data[i].Start + ":00";
                        data[i].end = data[i].Date.substr(0, 11) + data[i].End + ":00";
                        data[i].Text = "CalendarTitle";
                        data[i].Text = "testi2";
                        //alert("Varaus alku: " + data[i].start + " Varaus loppu: " + data[i].end);

                        var Date = new Date(data[i].Date);
                        //alert("varauksen pvm: " + data[i].Date + " startTime:" + data[i].Start + " End:" + data[i].End + " sisältö: " + data[i].text)
                    }
                    //alert("luodaan varaus kalenteriin: " + i);
                    Create(data);
                });
            }
</script>

<style>
    /*#dpc{
        height:600px !important;
    }*/
   /*.calendar_default_rowheader{
         height:100px !important;*/
    
</style>

<h2>VARAUSKALENTERI</h2>
<p>Viikko</p>
<div id="dpc">

    @Html.DayPilotCalendar("dpc", new DayPilotCalendarConfig
{
    BackendUrl = Url.Content("~/Reservations/BackEnd"),

    ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType.WorkWeek,
    CssOnly = true,
    //CssClassPrefix = "calendar_white",
    EventMoveHandling = DayPilot.Web.Mvc.Events.Calendar.EventMoveHandlingType.CallBack,
    EventResizeHandling = DayPilot.Web.Mvc.Events.Calendar.EventResizeHandlingType.CallBack,
    EventClickHandling = DayPilot.Web.Mvc.Events.Calendar.EventClickHandlingType.JavaScript,
    EventClickJavaScript = "editEvent(e.id())",
    //TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Calendar.TimeRangeSelectedHandlingType.JavaScript,
    //TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(start, end, null, { name: prompt('New Event Name:', 'New Event') });",
    TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Calendar.TimeRangeSelectedHandlingType.JavaScript,
    TimeRangeSelectedJavaScript = "create(start,end)"

    //TimeRangeSelectedJavaScript = "create(e.start(), e.end())"
    //TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(Alku, Loppu, { name: prompt('New Event Name:', 'New Event') });"
    //EventDeleteHandling = EventDeleteHandlingType.CallBack
})

    <div class="space">
        Viikko:
        <a href="javascript:dpc.commandCallBack('previous');">Edellinen</a>
        <a href="javascript:dpc.commandCallBack('next');">Seuraava</a>
    </div>
</div>
<p>
    @Html.ActionLink("Kuukausikalenteri", "BackMonthEnd")
</p>
<hr />

<h2>Palveluvaraus</h2>

<p style="padding-left:8px;font-size:12px">
    @Html.ActionLink("Luo uusi varaus", "Create")
</p>


<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserIdentity)
        </th>
        <th>
            @Html.ActionLink("Etunimi", "Index", new { sortOrder = ViewBag.FirstnameSortParm })
        </th>
        <th>
            @Html.ActionLink("Sukunimi", "Index", new { sortOrder = ViewBag.LastnameSortParm })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstNameA)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastNameA)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.TreatmentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TreatmentPlaceName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Start)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.End)
        </th>       
        <th>
            @Html.DisplayNameFor(model => model.FullNameH)
        </th> 
        <th>
            @Html.DisplayNameFor(model => model.Note)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TreatmentPaid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CalendarTitle)
        </th>
             
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserIdentity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstNameA)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastNameA)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TreatmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TreatmentPlaceName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End.Value)
            </td>            
            <td>
                @Html.DisplayFor(modelItem => item.FullNameH)
            </td> 
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TreatmentPaid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CalendarTitle)
            </td>   
             
            <td>
                @Html.ActionLink("Muokkaa", "Edit", new { id = item.Reservation_id }) |
                @Html.ActionLink("Tiedot", "Details", new { id = item.Reservation_id }) |
                @Html.ActionLink("Poista", "Delete", new { id = item.Reservation_id })
            </td>
        </tr>
    }

</table>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>