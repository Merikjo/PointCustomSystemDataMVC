@model IEnumerable<PointCustomSystemDataMVC.Models.Reservation>

@*@{
    ViewBag.Title = "Index";
}*@


@*[‎23.‎2.‎2017 10:35] Eero Kauppi:
Ei otsikkoa*@
@{
    ViewBag.Title = "ASP.NET MVC 5 Event Calendar";
}

<script src="~/Scripts/DayPilot/daypilot-all.min.js"></script>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>

@*<link href="@Url.Content("~/Themes/calendar_white.css")" rel="stylesheet" type="text/css" />*@
@using DayPilot.Web.Mvc;
@using DayPilot.Web.Mvc.Events.Calendar;
@using DayPilot.Web.Mvc.Enums.Calendar;

<script src="~/Scripts/DayPilot/daypilot-calendar.src.js"></script>

<h2>VARAUSKALENTERI</h2>


@*@Html.DayPilotMonth("dpm", new DayPilotMonthConfig
    {
        BackendUrl = Url.Content("~/Home/Backend"),
        EventMoveHandling = DayPilot.Web.Mvc.Events.Month.EventMoveHandlingType.CallBack,
        EventResizeHandling = DayPilot.Web.Mvc.Events.Month.EventResizeHandlingType.CallBack,
        TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Month.TimeRangeSelectedHandlingType.JavaScript,
        TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(start, end, { name: prompt('New Event Name:', 'New Event') });"
        //TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(Alku, Loppu, { name: prompt('New Event Name:', 'New Event') });"
    })*@




@Html.DayPilotCalendar("dpm", new DayPilotCalendarConfig
{
    BackendUrl = Url.Content("~/Reservations/Backend"),
    //BackendUrl = Url.Action("Backend", "Calendar"),
    ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType.WorkWeek,
    //CssOnly = true,
    //CssClassPrefix = "calendar_white",
    EventMoveHandling = DayPilot.Web.Mvc.Events.Calendar.EventMoveHandlingType.CallBack,
    EventResizeHandling = DayPilot.Web.Mvc.Events.Calendar.EventResizeHandlingType.CallBack,
    EventClickHandling = DayPilot.Web.Mvc.Events.Calendar.EventClickHandlingType.JavaScript,
    EventClickJavaScript = "editEvent(e.id())",
    TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Calendar.TimeRangeSelectedHandlingType.JavaScript,
    TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(start, end, null, { name: prompt('New Event Name:', 'New Event') });",
    //TimeRangeSelectedJavaScript = "create(e.start(), e.end())"
    //TimeRangeSelectedJavaScript = "dpm.timeRangeSelectedCallBack(Alku, Loppu, { name: prompt('New Event Name:', 'New Event') });"
    //EventDeleteHandling = EventDeleteHandlingType.CallBack
})

<script type="text/javascript">

    function create(start, end) {
        var m = new DayPilot.Modal();
        m.closed = function () {
            if (this.result == "OK") {
                db.commandCallBack('refresh');
            }
            db.clearSelection();
        };
        m.showUrl('@Url.Action("Create", "Reservations")?start=' + start + '&end=' + end);
    }

    function editEvent(id) {
        var modal = new DayPilot.Modal();
        modal.top = 60;
        modal.width = 300;
        modal.opacity = 70;
        modal.border = "10px solid #d0d0d0";
        modal.closed = function () {
            if (this.result == "OK") {
                db.commandCallBack('refresh');
            }
            db.clearSelection();
        };
        modal.height = 250;
        modal.zIndex = 100;
        modal.showUrl("/Reservations/Edit/" + id);
        //modal.showUrl("Varaus/Asiakaslomake/" + id);
        //modal.showUrl("http://localhost:17794/Varaus/Edit/37");
        //modal.showUrl("http://localhost:17794/Varaus/Edit/" + id);
         }


 // SCRIPT KALENTERINÄKYMÄ:
            var nav = new DayPilot.Navigator("nav");
            //editoitu
            nav.locale = "fi-fi";
            nav.showMonths = 1;
            nav.selectMode = "week";
            nav.onTimeRangeSelected = function (args) {
                dp.startDate = args.start;

                dp.update();

                //JSON kysely
                LoadEvents(dp.visibleStart(), dp.visibleEnd());
            };
            nav.init();


            var dp = new DayPilot.Calendar("dp");
            //editoitu
            dp.locale = "fi-fi";
            dp.allowEventOverlap = false;
            dp.viewType = "Week";
            dp.init();

            //event creating
            var e = new DayPilot.Event({
                date: new DayPilot.Date("2016-05-12T12:00:00"),
                start: new DayPilot.Start("2016-05-12T12:00:00"),
                end: new DayPilot.End("2016-05-12T13:00:00"),
                id: DayPilot.guid(),
                text: "EKA"
            });

            dp.events.add(e);

            var e = new DayPilot.Event({
                date: new DayPilot.Date("2016-05-12T12:00:00"),
                start: new DayPilot.Date("2016-05-13T12:00:00"),
                end: new DayPilot.Date("2016-05-13T16:00:00"),
                id: DayPilot.guid(),
                text: "TOKA"
            });

            //// event creating
            //dp.onTimeRangeSelected = function (args) {
            //    var name = prompt("New event name:", "Event");
            //    dp.clearSelection();
            //    if (!name) return;
            //    var e = new DayPilot.Event({
            //        start: args.start,
            //        end: args.end,
            //        id: DayPilot.guid(),
            //        resource: args.resource,
            //        text: name
            //    });
            //    dp.events.add(e);
            //    alert("Created");
            //};

            // event creating MODAL
            dp.onTimeRangeSelected = function (args) {
                create();
                dp.update();
            };

            var modal = new DayPilot.Modal({
                onClosed: function (args) {
                    console.log("Modal dialog closed");
                },
                // ...
            });

            //modal.showUrl("Edit.aspx");

            //var modal = new DayPilot.Modal({
            //    onClosed: function (args) {
            //        console.log("Modal dialog closed");
            //    },
            //    // ...
            //});
        //modal.showHtml("<h1>Hello</h1>");


            dp.onEventClicked = function (args) {
                //formatted = $.datepicker.formatDate("M d, yy", new Date("2014-07-08T09:02:21.377"));
                var startDate = new Date(args.e.start());
                var endDate = new Date(args.e.end());

                var hour = "" + startDate.getHours(); if (hour.length == 1) { hour = "0" + hour; }
                var minute = "" + startDate.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
                //var sD = (startDate.getMonth() + 1) + '.' + startDate.getDate() + '.' + startDate.getFullYear() + " " + hour + ":" + minute;
                var sD = startDate.getDate() + '.' + (startDate.getMonth() + 1) + '.' + startDate.getFullYear() + " " + hour + ":" + minute;

                var hour = "" + endDate.getHours(); if (hour.length == 1) { hour = "0" + hour; }
                var minute = "" + endDate.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
                //var eD = (endDate.getMonth() + 1) + '.' + endDate.getDate() + '.' + endDate.getFullYear() + " " + hour + ":" + minute;
                var eD = endDate.getDate() + '.' + (endDate.getMonth() + 1) + '.' + endDate.getFullYear() + " " + hour + ":" + minute;

                editEvent(args.e.data.ID);

                //alert("Event clicked: Alku: " + sD + " Loppu: " + eD);

                //alert( dp.visibleStart().toString() + " - " + dp.visibleEnd().toString() );
            };

    //Lisätty 22.2.2017
            function LoadEvents(Start, End) {

                url = "/Reservations/Backend/?start=" + start + "&end=" + end;
                //Home/GetVaraukset/?alku="2016-05-20T09:02"&loppu="2016-05-29T09:02";

                //alert("AJAX url: " + url);

                $.ajax({ url: url, cache: false }).done(function (data) {
                    i = 0;

                    //alert("JSON objects: " + data);

                    for (var i = 0; i < data.length; i++) {
                        data[i].Date = ConvertDate(data[i].Date);
                        data[i].Start = data[i].Start;
                        data[i].End = data[i].End;
                        data[i].start = data[i].Date.substr(0, 11) + data[i].Start + ":00";
                        data[i].end = data[i].Date.substr(0, 11) + data[i].End + ":00";

                        //alert("Varaus alku: " + data[i].start + " Varaus loppu: " + data[i].end);

                        var Date = new Date(data[i].Date);
                        //alert("varauksen pvm: " + data[i].Date + " startTime:" + data[i].Start + " End:" + data[i].End + " sisältö: " + data[i].text)

                    }

                    //alert("luodaan varaus kalenteriin: " + i);
                    Create(data);
                });
            }

    </script>

<div id="dpc"></div>
<div class="space">
    Viikko:
    <a href="javascript:dpm.commandCallBack('previous');">Edellinen</a>
    <a href="javascript:dpm.commandCallBack('next');">Seuraava</a>
</div>

<hr />

<h2>Palveluvaraus</h2>

<p>
    @Html.ActionLink("Luo uusi varaus", "Create")
</p>

<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.User.UserIdentity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TreatmentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Start)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.End)
        </th>     
        <th>
            @Html.DisplayNameFor(model => model.Customer1.FirstName)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Studentx.FullName)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.TreatmentPlace.TreatmentPlaceName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Note)
        </th>
    
        @*<th>
                @Html.DisplayNameFor(model => model.Type)
            </th>*@    
        @*<th>
                @Html.DisplayNameFor(model => model.Personnel1.FirstName)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Phone1.PhoneNum_1)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.PostOffices1.PostalCode)
            </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.TreatmentOffice.TreatmentOfficeName)
        </th>*@
       
        
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserIdentity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TreatmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End)
            </td>      
            <td>
                @Html.DisplayFor(modelItem => item.Customer1.FirstName)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Studentx.FirstName + item.LastName)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.TreatmentPlace.TreatmentPlaceName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td> 
            @*<td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>*@       
            @*<td>
                    @Html.DisplayFor(modelItem => item.Personnel1.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone1.PhoneNum_1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostOffices1.PostalCode)
                </td>*@
           
            @*<td>
                @Html.DisplayFor(modelItem => item.TreatmentOffice.TreatmentOfficeName)
            </td>*@
               
            <td>
                @Html.ActionLink("Muokkaa", "Edit", new { id = item.Reservation_id }) |
                @Html.ActionLink("Tiedot", "Details", new { id = item.Reservation_id }) |
                @Html.ActionLink("Poista", "Delete", new { id = item.Reservation_id })
            </td>
        </tr>
    }

</table>
